# #############################################################################
# Copyright (c) 2017 HUAWEI TECHNOLOGIES CO.,LTD and others.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
# #############################################################################
---
- name: create osa log directory
  file:
    path: /var/log/osa/
    state: directory

- name: disable kernel update in rt_kvm scenario
  lineinfile:
    dest: /etc/ansible/roles/openstack_hosts/vars/ubuntu-16.04.yml
    state: absent
    regexp: 'linux-image-extra-*'
  when: rt_kvm is defined and rt_kvm == "Enable"

- name: copy openstack_user_config
  template:
    src: openstack_user_config.yml.j2
    dest: /etc/openstack_deploy/openstack_user_config.yml

- name: copy user_variables
  template:
    src: user_variables.yml.j2
    dest: /etc/openstack_deploy/user_variables.yml

- name: check apt source
  shell: "ping -c 2 {{ LOCAL_REPOSITORY_IP }} > /dev/null"
  register: checkresult
  ignore_errors: "true"

- name: add mariadb local repository
  blockinfile:
    dest: /etc/openstack_deploy/user_variables.yml
    block: |
      galera_client_apt_repo_url: "http://192.168.102.2:9997/xenial-ocata-ppa xenial main"
      galera_repo_url: "[ arch=amd64 ] http://192.168.102.2:9997/xenial-ocata-ppa xenial main"
      uca_apt_repo_url: "[ arch=amd64 ] http://192.168.102.2:9997/xenial-ocata-ppa xenial main"
      _rabbitmq_package_url: "http://192.168.102.2:9997/rabbitmq-server_3.6.9-1_all.deb"
      percona_package_url: "http://192.168.102.2:9997/percona-xtrabackup-24_2.4.5-1.xenial_amd64.deb"
      qpress_package_url: "http://192.168.102.2:9997/qpress_11-1.xenial_amd64.deb"
      haproxy_hatop_download_url: "http://192.168.102.2:9997/hatop-0.7.7.tar.gz"
      pip_upstream_url: "http://192.168.102.2:9997/get-pip.py"
  when: checkresult.rc == 0

- name: add lxc image for offline deloyment
  blockinfile:
    dest: /etc/ansible/roles/lxc_hosts/tasks/main.yml
    insertbefore: '^- include: lxc_post_install.yml'
    block: |
      - name: add lxc image to the lxc cache dir
        get_url:
          url: "http://192.168.102.2:9997/download.tar.gz"
          dest: "/opt/download.tar.gz"

      - name: unarchive lxc image tarball
        command: su -s /bin/sh -c "tar -zxf /opt/download.tar.gz -C /var/cache/lxc/"

      - name: clear tarball
        file:
          path: "/opt/download.tar.gz"
          state: absent
  when: offline_deployment is defined and offline_deployment == "Enable"

- name: copy pip.conf for repo lxc
  copy:
    src: pip.conf
    dest: "/etc/ansible/roles/repo_server/files/pip.conf"
  when: offline_deployment is defined and offline_deployment == "Enable"

- name: add pip.conf for repo lxc
  blockinfile:
    dest: "/etc/ansible/roles/repo_server/tasks/repo_pre_install.yml"
    insertafter: '^# which'
    block: |
      - name: create pip conf directory
        file:
          path: "~/.pip/"
          state: directory

      - name: add pip.conf
        copy:
          src: pip.conf
          dest: "~/.pip/pip.conf"
  when: offline_deployment is defined and offline_deployment == "Enable"

- name: copy apt.conf for lxc
  copy:
    src: apt.conf
    dest: "/etc/ansible/roles/lxc_container_create/files/apt.conf"
  when: offline_deployment is defined and offline_deployment == "Enable"

- name: add apt.conf for lxc
  blockinfile:
    dest: "/etc/ansible/roles/lxc_container_create/tasks/container_create.yml"
    insertbefore: '^- name: Create hostname'
    block: |
      - name: add apt.conf
        copy:
          src: apt.conf
          dest: "/etc/apt/apt.conf"

  when: offline_deployment is defined and offline_deployment == "Enable"

- name: copy cinder.yml
  copy:
    src: cinder.yml
    dest: /etc/openstack_deploy/env.d/cinder.yml

- name: copy ansible.cfg
  template:
    src: ansible.cfg
    dest: /opt/openstack-ansible/playbooks/

- name: copy setup-ovs.yml
  copy:
    src: setup-ovs.yml
    dest: /opt/openstack-ansible/playbooks

- name: copy flavor roles
  copy:
    src: os-flavor
    dest: /etc/ansible/roles/

- name: generate create-network.yml
  template:
    src: create-network.yml.j2
    dest: /opt/openstack-ansible/playbooks/create-network.yml

- name: generate create-flavor.yml
  template:
    src: create-flavor.yml.j2
    dest: /opt/openstack-ansible/playbooks/create-flavor.yml

- name: copy fetch-files.yml
  copy:
    src: fetch-files.yml
    dest: /opt/openstack-ansible/playbooks/fetch-files.yml

- name: copy user_ceph.yml
  copy:
    src: user_ceph.yml
    dest: /etc/openstack_deploy/user_ceph.yml
  when:
    - "{{ hostvars[inventory_hostname]['groups']['ceph_mon'] |length > 0 }}"
    - "{{ hostvars[inventory_hostname]['groups']['ceph_osd'] | length > 0 }}"

- name: render ceph.yml.j2
  template:
    src: ceph.yml.j2
    dest: /etc/openstack_deploy/conf.d/ceph.yml
  when:
    - "{{ hostvars[inventory_hostname]['groups']['ceph_mon'] |length > 0 }}"
    - "{{ hostvars[inventory_hostname]['groups']['ceph_osd'] | length > 0 }}"

- name: render user_variables_ceph.yml.j2
  template:
    src: user_variables_ceph.yml.j2
    dest: /etc/openstack_deploy/user_variables_ceph.yml
  when:
    - "{{ hostvars[inventory_hostname]['groups']['ceph_mon'] |length > 0 }}"
    - "{{ hostvars[inventory_hostname]['groups']['ceph_osd'] | length > 0 }}"
