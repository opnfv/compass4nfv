{% set memcached_servers = [] %}
{% for host in haproxy_hosts.values() %}
{% set _ = memcached_servers.append('%s:11211'% host) %}
{% endfor %}
{% set memcached_servers = memcached_servers|join(',') %}

[DEFAULT]
verbose = {{ VERBOSE }}
debug = {{ VERBOSE }}
state_path = /var/lib/neutron
notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True
log_dir = /var/log/neutron
bind_host = {{ network_server_host }}
bind_port = 9696
core_plugin = ml2
service_plugins = router
api_paste_config = api-paste.ini
auth_strategy = keystone
dhcp_lease_duration = 86400
allow_overlapping_ips = True
rpc_backend = rabbit
rpc_thread_pool_size = 240
rpc_conn_pool_size = 100
rpc_response_timeout = 300
rpc_cast_timeout = 300
notification_driver = neutron.openstack.common.notifier.rpc_notifier
default_notification_level = INFO
notification_topics = notifications
agent_down_time = 75
network_scheduler_driver = neutron.scheduler.dhcp_agent_scheduler.ChanceScheduler
router_scheduler_driver = neutron.scheduler.l3_agent_scheduler.ChanceScheduler
api_workers = 8
rpc_workers = 8
notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True
nova_url = http://{{ internal_vip.ip }}:8774/v3
nova_region_name = RegionOne
nova_admin_username = nova
nova_admin_password = {{ NOVA_PASS }}
nova_admin_auth_url = http://{{ internal_vip.ip }}:35357/v3
send_events_interval = 2

[quotas]
quota_driver = neutron.db.quota_db.DbQuotaDriver
quota_items = network,subnet,port
default_quota = -1
quota_network = 100
quota_subnet = 100
quota_port = 8000
quota_security_group = 1000
quota_security_group_rule = 1000

[agent]
root_helper = "sudo /usr/bin/neutron-rootwrap /etc/neutron/rootwrap.conf"
report_interval = 30

[keystone_authtoken]
auth_uri = http://{{ internal_vip.ip }}:5000
auth_url = http://{{ internal_vip.ip }}:35357
memcached_servers = {{ memcached_servers }}
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = {{ NEUTRON_PASS }}

identity_uri = http://{{ internal_vip.ip }}:35357
admin_tenant_name = service
admin_user = neutron
admin_password = {{ NEUTRON_PASS }}
signing_dir = $state_path/keystone-signing

[database]
connection = mysql://neutron:{{ NEUTRON_DBPASS }}@{{ db_host }}/neutron
slave_connection =
max_retries = 10
retry_interval = 10
min_pool_size = 1
max_pool_size = 100
idle_timeout = 30
use_db_reconnect = True
max_overflow = 100
connection_debug = 0
connection_trace = False
pool_timeout = 10

[service_providers]
service_provider=FIREWALL:Iptables:neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewllDriver:default

{% if enable_fwaas %}
[fwaas]
driver = neutron_fwaas.services.firewall.drivers.linux.iptables_fwaas.IptablesFwaasDriver
enabled = True
{% endif %}

[nova]
auth_url = http://{{ internal_vip.ip }}:35357
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = {{ NOVA_PASS }}

[oslo_messaging_rabbit]
rabbit_host = {{ rabbit_host }}
rabbit_password = {{ RABBIT_PASS }}
rabbit_port = 5672
rabbit_userid = {{ RABBIT_USER }}

[oslo_concurrency]
lock_path = $state_path/lock
